#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/weechat/quickstart/
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
identifier = cyan
regex = white
replace = cyan

[trigger]
buflist_buffer_scroll.arguments = "buflist_buffer_scroll"
buflist_buffer_scroll.command = "/mute /buffer_autoset add ${full_name} localvar_set_start_at ${my_start_at}"
buflist_buffer_scroll.conditions = "${_key} =~ -wheeldown$ || ${buffer[${pointer}].local_variables.start_at} !="
buflist_buffer_scroll.enabled = on
buflist_buffer_scroll.hook = hsignal
buflist_buffer_scroll.post_action = none
buflist_buffer_scroll.regex = "/.*/${if:${buffer[${pointer}].local_variables.start_at}==?0:${buffer[${pointer}].local_variables.start_at}}/my_start_at /.*/${calc:${my_start_at}${if:${_key}=~up&&${my_start_at}!=?-:+}1}/my_start_at"
buflist_buffer_scroll.return_code = ok
buflist_fold_symbol_click.arguments = "1001|buflist_mouse"
buflist_fold_symbol_click.command = "/toggle_bufautoset localvar_set_fold ${full_name}"
buflist_fold_symbol_click.conditions = "${localvar_type} == server && ${plugins.var.buflist.item.fold} != && (${plugins.var.buflist.item.buffer_number} != && ${_bar_item_col} == ${lengthscr:${buffer[last_gui_buffer].number}.} || ${plugins.var.buflist.item.buffer_number} == && ${_bar_item_col} == 0)"
buflist_fold_symbol_click.enabled = on
buflist_fold_symbol_click.hook = hsignal
buflist_fold_symbol_click.post_action = none
buflist_fold_symbol_click.regex = ""
buflist_fold_symbol_click.return_code = ok_eat
buflist_refresh_options.arguments = "weechat.bar.buflist.size*;plugins.var.buflist.*"
buflist_refresh_options.command = "/buflist refresh"
buflist_refresh_options.conditions = ""
buflist_refresh_options.enabled = on
buflist_refresh_options.hook = config
buflist_refresh_options.post_action = none
buflist_refresh_options.regex = ""
buflist_refresh_options.return_code = ok
buflist_resize.arguments = "buflist_resize"
buflist_resize.command = "/mute /set plugins.var.buflist.section.${my_modified_section}.size ${my_modified_section_size};/bar set ${_bar_name} size ${my_new_bar_size}"
buflist_resize.conditions = "${_key}=~down || ${_key}=~up && (${_bar_item_col} < ${plugins.var.buflist.section.left.size} && ${plugins.var.buflist.section.left.size} > 1 || ${_bar_item_col} >= ${plugins.var.buflist.section.left.size} && ${plugins.var.buflist.section.right.size} > 1)"
buflist_resize.enabled = on
buflist_resize.hook = hsignal
buflist_resize.post_action = none
buflist_resize.regex = "/.*/${if:${_key}=~up$?-:+}/my_action /.*/${if:${_bar_item_col}<${plugins.var.buflist.section.left.size}?left:right}/my_modified_section /.*/${calc:${plugins.var.buflist.section.${my_modified_section}.size} ${my_action} 1}/my_modified_section_size /.*/${if:${weechat.bar.${_bar_name}.size}!=?${calc:${weechat.bar.${_bar_name}.size} ${my_action} 1}:0}/my_new_bar_size"
buflist_resize.return_code = ok
buflist_tools.arguments = "buflist_tools;manage Amit's custom buflist (https://gist.github.com/pascalpoitras/8406501);resize <buflist_size> <left_size>|? [<right_size>] || hide|show|itoggle|showonly|hideonly <item>|-all [<item>|-all...] || enable|disable|toggle <feature> [<feature>...];       resize: resize the buflist size and the two sections${\n}         hide: hide one or more item(s)${\n}         show: show one or more item(s)${\n}      itoggle: toggle one or more item(s)${\n}     showonly: hide all items except...${\n}     hideonly: show all items except...${\n}       enable: enable a feature that change the behavior of the buflist${\n}      disable: disable a feature that change the behavior of the buflist${\n}       toggle: toggle a feature that change the behavior of the buflist${\n} buflist_size: new size for the buflist${\n}    left_size: size of left section${\n}   right_size: size of right section${\n}         item: an item (buffer_number, fold, indent, nick_prefix, buffer_name, lag, filter, relay_count, extra, hotlist)${\n}         -all: do action on all items${\n}      feature: a feature (indent_tree, real_net_name, show_hidden_buffers)${\n}${\n}The buflist is composed of two sections. The left section is composed of nine items. The buffer number, the fold symbol (servers only), the indentation, the nick prefix (channels only), the buffer name, the lag (servers only), the filter (on some buffer like fset, scripts...), the relay count (for the relay buffer) and extra infos about a buffer. The right section is only composed of hotlist. The two sections can be resized independently.${\n}${\n}Exemples:${\n}  Resize the bar to 20 with the size 15 for left section and 5 for right section:${\n}    /buflist_tools resize 20 15;resize 20 15 || show|hide|itoggle|hideonly|showonly buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-all|%* || enable|disable|toggle indent_tree|real_net_name|show_hidden_buffers|%*"
buflist_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
buflist_tools.conditions = "${tg_argv_eol1} =~ ^resize +[0-9]+ +([0-9]+( +[0-9]+)?|\? +[0-9]+)$ || ${tg_argv_eol1} =~ ^(hide|show|itoggle|showonly|hideonly) +(([[:alnum:]_]+|-all)( +|$))+$ || ${tg_argv_eol1} =~ ^(enable|disable|toggle) +([[:alnum:]_]+( +|$))+$"
buflist_tools.enabled = on
buflist_tools.hook = command
buflist_tools.post_action = none
buflist_tools.regex = "/.*/${tg_argv1}/my_action /.*/${if:${my_action}==resize?${tg_argv_eol2}}/my_resize_cmds ===^([^ ]+) +([^ ]+)( +([^ ]+))?$===${define:my_buflist_size,${re:1}}${define:my_left_size,${re:2}}${define:my_right_size,${re:4}}/mute /set plugins.var.buflist.section.left.size ${if:${my_left_size}=~[0-9]+?${my_left_size}:${calc:${my_buflist_size}-${my_right_size}}};/mute /set plugins.var.buflist.section.right.size ${if:${my_right_size}=~[0-9]+?${my_right_size}:${calc:${my_buflist_size}-${my_left_size}}};/bar set buflist size ${my_buflist_size}===my_resize_cmds /.*/${if:${my_action}=~^(hide|show|itoggle|showonly|hideonly)$?${tg_argv_eol2}}/my_item_cmds /.*/buffer_number fold indent nick_prefix buffer_name lag filter relay_count extra hotlist/my_items /-all/${my_items}/my_item_cmds /.*/${if:${my_action}=~^(hide|show)only$?${my_items}}/my_hide_or_show_everything ===[^ ]+===/mute /set plugins.var.buflist.item.${re:0} ${if:${my_action}==hideonly};===my_hide_or_show_everything ===[^ ]+===/mute /set plugins.var.buflist.item.${re:0} ${if:${my_action}=~^hide?0:${if:${my_action}=~^show?1:\x5c${if:\x5c${plugins.var.buflist.item.${re:0}${\x5cx7d}?0:1${\x5cx7d}}};===my_item_cmds /.*/${my_hide_or_show_everything}${re:0}/my_item_cmds /.*/${if:${my_action}=~^(enable|disable|toggle)$?${tg_argv_eol2}}/my_look_cmds ===[^ ]+===/mute /set plugins.var.buflist.look.${re:0} ${if:${my_action}==disable?0:${if:${my_action}==enable?1:${if:${plugins.var.buflist.look.${re:0}}!=?0:1}}};===my_look_cmds /.*/${my_resize_cmds}${my_item_cmds}${my_look_cmds}/my_cmds_to_run"
buflist_tools.return_code = ok
chanmon_monitor.arguments = "*;irc_privmsg,matrix_message,matrix_text"
chanmon_monitor.command = "/print -newbuffer ${my_monitor} -tags ${my_tags} \t${my_message}"
chanmon_monitor.conditions = "${buffer.local_variables.type} == channel && ${buffer.local_variables.no_chanmon_like} == && (${plugins.var.group_tools.chanmon.all.general.allow_filtered_lines} != || ${tg_displayed} !=) && (${plugins.var.group_tools.chanmon.all.general.allow_hidden_channels} != || ${buffer.hidden} ==)"
chanmon_monitor.enabled = on
chanmon_monitor.hook = print
chanmon_monitor.post_action = none
chanmon_monitor.regex = "/.*/${split:1,_,,${tg_trigger_name}}/my_monitor /.*/${plugins.var.group_tools.${my_monitor}.list.header.list}/my_list /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz0-9_]+$?${re:0}}/my_list /[^,]+/plugins.var.group_tools.${my_monitor}.item.${re:0}/my_list /[^,]+/${if:${length:${${re:0}.conditions}}==||${eval_cond:${${re:0}.conditions}}?${re:0}}/my_list /,+/,/my_list /^,|,$//my_list /.*/${my_list}/my_bgs /[^,]+/${base_encode:16,${eval:${${re:0}.bg}}}/my_bgs /$/,${base_encode:16,default}/my_bgs /([^,]+)(,|$)/${define:my_fg,${eval:${${re:1}.fg}}}${define:my_bg,${base_decode:16,${split:${re:repl_index},,,${my_bgs}}}}${define:my_separator,${eval:${${re:1}.separator}}}${define:my_min_length,${eval:${${re:1}.min_length}}}${define:my_max_length,${eval:${${re:1}.max_length}}}${define:my_content,${eval:${${re:1}.content}}}${define:my_next_bg,${base_decode:16,${split:${calc:${re:repl_index}+1},,,${my_bgs}}}}${color:${my_fg},${my_bg}} ${cutscr:+${if:${split:1,0,keep_eol+strip_left,${my_max_length}}!~^[1-9][0-9]*$?${calc:${lengthscr:${my_content}}+1}:${my_max_length}},…,${my_content}}${repeat:${calc:${my_min_length}-${lengthscr:${my_content}}}, }${color:${my_fg},${my_bg}} ${if:${plugins.var.group_tools.${my_monitor}.all.general.powerline}!=?${if:${color:${my_bg}}==${color:${my_next_bg}}?${color:${my_separator}}:${color:${my_bg},${my_next_bg}}${color:reset}}:${color:reset} }/my_list /.+/${re:0} /my_list /.*/${tg_tags}/my_tags / //my_tags /.*/${my_list}${tg_message}/my_message"
chanmon_monitor.return_code = ok
control_buffers_change_control_window.arguments = "plugins.var.control_buffers_window;plugins.var.control_buffers2_window"
control_buffers_change_control_window.command = "/window refresh"
control_buffers_change_control_window.conditions = ""
control_buffers_change_control_window.enabled = on
control_buffers_change_control_window.hook = config
control_buffers_change_control_window.post_action = none
control_buffers_change_control_window.regex = ""
control_buffers_change_control_window.return_code = ok
day_changed_upgrade_scripts.arguments = "day_changed"
day_changed_upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
day_changed_upgrade_scripts.conditions = ""
day_changed_upgrade_scripts.enabled = on
day_changed_upgrade_scripts.hook = signal
day_changed_upgrade_scripts.post_action = none
day_changed_upgrade_scripts.regex = ""
day_changed_upgrade_scripts.return_code = ok
devinfo.arguments = "devinfo;infos about WeeChat;[-extra] [-match];-extra: displays extra informations like in how many day the next stable will be released${\n}-match: show if you are up-to-date${\n}${\n}This command retrieve infos about current and next stable version.${\n}${\n}Exemples:${\n}  Verbose output:${\n}    /${tg_trigger_name} -extra -match;-extra|-match|%*"
devinfo.command = "/exec -norc -timeout 5 -hsignal devinfo${my_flags} url:https://weechat.org/dev/info/all/"
devinfo.conditions = "${tg_argv_eol1} =~ ^(-(extra|match) +)*(-(extra|match))?$"
devinfo.enabled = on
devinfo.hook = command
devinfo.post_action = none
devinfo.regex = "/.*/${tg_argv_eol1}/my_flags /(^| )-/,/my_flags / +//my_flags /.+/${re:0},/my_flags"
devinfo.return_code = ok
devinfo_hsignal.arguments = "devinfo*"
devinfo_hsignal.command = "/print -current -escape ${out}"
devinfo_hsignal.conditions = "${err} == && ${info:python_version} !="
devinfo_hsignal.enabled = on
devinfo_hsignal.hook = hsignal
devinfo_hsignal.post_action = none
devinfo_hsignal.regex = "/.*/${tg_signal}/my_flags /^devinfo//my_flags /(?n)^stable:(.*)/${re:0}${if:${my_flags}=~,match,&&${info:version}!~-(dev|rc[0-9]+)? ${if:${re:1}==${info:version}?${color:121}(as mine!):${color:163}(mine is ${info:version})}}/out /(?n)^devel:(.*)/${re:0}${if:${my_flags}=~,match,&&${info:version}=~-(dev|rc[0-9]+)? ${if:${re:1}==${info:version}?${color:121}(as mine!):${color:163}(mine is ${info:version})}}/out /.*/${info:version_git}/my_git /^[^g]+g(.*)/${re:1}/my_git /(?n)^git:(.*)/${re:0}${if:${my_flags}=~,match,&&${info:version}=~-(dev|rc[0-9]+)? ${if:${re:1}=~^${my_git}?${color:121}(as mine!):${color:163}(mine is ${info:version_git})}}/out /(?n)^(stable_date:)(.*)/${re:1}${info:date_preferred,${re:2}}${if:${my_flags}=~,extra,? (since ${info:date_calc_days,${re:2}} days)}/out /(?n)^(next_stable_date:)(.*)/${re:1}${info:date_preferred,${re:2}}${if:${my_flags}=~,extra,? (${info:date_calc_days,${re:2}} days left)}/out /_/ /out /(?n)^([^:]+:)(.*)/${color:31}${re:1} ${color:default}${re:2}/out /\n/\x5cn/out"
devinfo_hsignal.return_code = ok
group_tools.arguments = "group_tools;manage groups of options;set <group>,[<group>...] <namespace> <section>,[<section>...] <option>,[<option>...] <value> || add <group>,[<group>...] <item> ${\x22}[<option>,[<option>...]]${\x22} ${\x22}[<value>]${\x22} [${\x22}[<value>]${\x22}...] || del <group>,[<group>...] <item> [<item>...] || clear <group>,[<group>...] <list>,[<list>...] || push|push_if_not|remove|content <group>,[<group>...] <list>,[<list>...] <item> [<item>...];        set: change the value of one or more options of one or more sections${\n}        add: add a new item${\n}        del: delete one or more items${\n}      clear: clear a list${\n}       push: put one or more items at the end of a list${\n}push_if_not: put one or more items at the end of a list if not already in the list${\n}     remove: remove one or more items in a list${\n}    content: replace a list${\n}      group: a group${\n}  namespace: a namespace${\n}    section: a section${\n}     option: an option${\n}      value: a value for an option${\n}       item: name of an item${\n}       list: a list${\n}${\n}Create or update an item named nick in the chanmon group and put the item at the end of the header list:${\n}${\n}   /${tg_trigger_name} add chanmon nick ${\x22}${\x22} ${\x22}5${\x22} ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}24${\x22} ${\x22}black${\x22} ${\x22}${raw:${tg_tag_nick}}${\x22}${\n}${\n}The first 5 will end up in the option named 1, the second 5 will end up in the option named 2 and so on. These names of options are not really useful, to give them a name:${\n}${\n}   /${tg_trigger_name} clear chanmon header${\n}   /${tg_trigger_name} add chanmon header nick min_length,max_length,fg,bg,separator,content 5 5 white 24 black ${raw:${tg_tag_nick}}${\n}${\n}now the first 5 will end up in min_length, the second 5 will end up in max_length and so on. It's tedious to repeat the options names everytime. You can give the defaults name just once:${\n}${\n}   /${tg_trigger_name} clear chanmon header${\n}   /${tg_trigger_name} set chanmon all general defaults_options min_length,max_length,fg,bg,separator,content${\n}   /${tg_trigger_name} add chanmon header nick push ${\x22}${\x22} 5 5 white 24 black ${raw:${tg_tag_nick}};set|add|del|clear|push|push_if_not|remove|content"
group_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
group_tools.conditions = "${define:my_regex,[abcdefghijklmnopqrstuvwxyz0-9_]+}${tg_argv_eol1} =~ (?-i)^set +(${my_regex},?)+ +${my_regex} +(${my_regex},?)+ +(${my_regex},?)+ . || ${tg_argv_eol1} =~ (?-i)^add +(${my_regex},?)+ +${my_regex} . && ${tg_shell_argc} > 5 || ${tg_argv_eol1} =~ (?-i)^del +(${my_regex},?)+ +(${my_regex} *)+$ || ${tg_argv_eol1} =~ (?-i)^clear +(${my_regex},?)+ +(${my_regex},?)+$ || ${tg_argv_eol1} =~ (?-i)^(content|push|push_if_not|remove) +(${my_regex},?)+ +(${my_regex},?)+ +(${my_regex} *)+$"
group_tools.enabled = on
group_tools.hook = command
group_tools.post_action = none
group_tools.regex = "/.*/${tg_argv1}/my_action /.*/${if:${my_action}=~^(add|del|set)$?item:list}/my_action_type /.*/${tg_argv2}/my_groups /.*/${if:${my_action_type}==list?${tg_argv3}}/my_lists /.*/${if:${my_action_type}==item?${my_groups},}/my_group_tools_item_cmds ===([^,]+),===${define:my_group,${re:1}}/group_tools_item ${my_action} ${my_group} \${base_decode:16,${base_encode:16,${tg_argv_eol3}}};===my_group_tools_item_cmds /$/${my_group_tools_item_cmds}/my_cmds_to_run /.*/${if:${my_action_type}==list?${my_groups},}/my_group_tools_list_cmds /.*/${if:${my_action_type}==list?${my_lists},}/my_lists /.*/${if:${my_action_type}==list?${split:count,,strip_right,${my_groups}}}/my_number_of_groups /.*/${if:${my_action_type}==list?${split:count,,strip_right,${my_lists}}}/my_number_of_lists /[^,]+,/${repeat:${my_number_of_lists},${re:0}}/my_group_tools_list_cmds /.+/${repeat:${my_number_of_groups},${re:0}}/my_lists ===([^,]+),===${define:my_group,${re:1}}${define:my_list,${split:${re:repl_index},,,${my_lists}}}/group_tools_list ${my_action} ${my_group} ${my_list} ${tg_argv_eol4};===my_group_tools_list_cmds /$/${my_group_tools_list_cmds}/my_cmds_to_run"
group_tools.return_code = ok
group_tools_item.arguments = "group_tools_item;manage the items of a group;set <group> <namespace> <section>,[<section>...] <option>,[<option>...] <value> || add <group> <item> ${\x22}[<option>,[<option>...]]${\x22} ${\x22}[<value>]${\x22} [${\x22}[<value>]${\x22}...] || del <group> <item> [<item>...];      set: change the value of one or more options of one or more sections${\n}      add: add a new item${\n}      del: delete one or more items${\n}    group: a group${\n}namespace: a namespace${\n}  section: a section${\n}   option: an option${\n}    value: a value for an option${\n}     item: name of an item${\n}${\n}Add or replace an item named nick in the chanmon group:${\n}${\n}   /${tg_trigger_name} add chanmon nick ${\x22}${\x22} ${\x22}5${\x22} ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}24${\x22} ${\x22}black${\x22} ${\x22}${raw:${tg_tag_nick}}${\x22}${\n}${\n}The first 5 will end up in the option named 1, the second 5 will end up in the option named 2 and so on. These names of options are not really useful, to give them a name:${\n}${\n}   /${tg_trigger_name} del chanmon nick${\n}   /${tg_trigger_name} add chanmon nick ${\x22}min_length,max_length,fg,bg,separator,content${\x22} ${\x22}5${\x22} ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}24${\x22} ${\x22}black${\x22} ${\x22}${raw:${tg_tag_nick}}${\x22}${\n}${\n}now the first 5 will end up in min_length, the second 5 will end up in max_length and so on. It's tedious to repeat the options names everytime. You can give the defaults name just once:${\n}${\n}   /${tg_trigger_name} del chanmon nick${\n}   /${tg_trigger_name} set chanmon all general defaults_options min_length,max_length,fg,bg,separator,content${\n}   /${tg_trigger_name} add chanmon nick ${\x22}${\x22} ${\x22}5${\x22} ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}24${\x22} ${\x22}black${\x22} ${\x22}${raw:${tg_tag_nick}}${\x22};set|add|del"
group_tools_item.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
group_tools_item.conditions = "${define:my_regex,[abcdefghijklmnopqrstuvwxyz0-9_]+}${tg_argv_eol1} =~ (?-i)^set +${my_regex} +${my_regex} +(${my_regex},?)+ +(${my_regex},?)+ . || ${tg_argv_eol1} =~ (?-i)^add +${my_regex} +${my_regex} . && ${tg_shell_argc} > 5 || ${tg_argv_eol1} =~ (?-i)^del +${my_regex} +(${my_regex} *)+$"
group_tools_item.enabled = on
group_tools_item.hook = command
group_tools_item.post_action = none
group_tools_item.regex = "/.*/${tg_argv1}/my_action /.*/${tg_argv2}/my_group /.*/${if:${my_action}==set?${tg_argv3}}/my_namespace /.*/plugins.var.group_tools.${my_group}/my_opt_prefix /.*/${if:${my_action}==add?${tg_argv3}:${if:${my_action}==del?${tg_argv_eol3}}}/my_items / +/,/my_items /.*/${if:${my_action}==set?${tg_argv4}}/my_sections /[^,]$/${re:0},/my_sections /.*/${if:${my_action}==set?${tg_argv5}}/my_options /[^,]$/${re:0},/my_options /.*/${if:${my_action}==set?${split:count,,strip_right,${my_sections}}}/my_number_of_sections /.*/${if:${my_action}==set?${split:count,,strip_right,${my_options}}}/my_number_of_options /[^,]+,/${repeat:${my_number_of_options},${re:0}}/my_sections /.+/${repeat:${my_number_of_sections},${re:0}}/my_options ===([^,]+),===${define:my_option,${split:${re:repl_index},,,${my_options}}}/mute -core /set ${my_opt_prefix}.${my_namespace}.${re:1}.${my_option} \${base_decode:16,${base_encode:16,${tg_argv_eol6}}};===my_sections /$/${my_sections}/my_cmds_to_run /.*/${if:${my_action}==add?${repeat:${calc:${tg_shell_argc}-5},,}}/my_add_cmds ===,===${define:my_option,${if:${split:${re:repl_index},,,${tg_shell_argv4}}=~^[abcdefghijklmnopqrstuvwxyz0-9_]+$?${split:${re:repl_index},,,${tg_shell_argv4}}:${if:${split:${re:repl_index},,,${${my_opt_prefix}.all.general.defaults_options}}=~^[abcdefghijklmnopqrstuvwxyz0-9_]+$?${split:${re:repl_index},,,${${my_opt_prefix}.all.general.defaults_options}}:${re:repl_index}}}}/mute -core /set ${my_opt_prefix}.item.${my_items}.${my_option} '\${base_decode:16,${base_encode:16,${tg_shell_argv${calc:4+${re:repl_index}}}}}';===my_add_cmds /$/${my_add_cmds}/my_cmds_to_run /.*/${if:${my_action}==del?${my_items}}/my_del_cmds ===([^,]+),?===/mute -core /unset -mask ${my_opt_prefix}.item.${re:1}.*;===my_del_cmds /$/${my_del_cmds}/my_cmds_to_run"
group_tools_item.return_code = ok
group_tools_list.arguments = "group_tools_list;manage the list of a group;clear <group> || push|push_if_not|remove|content <group> <item> [<item>...];      clear: clear a list${\n}       push: put one or more items at the end of a list${\n}push_if_not: put one or more items at the end of a list if not already in the list${\n}     remove: remove one or more items in a list${\n}    content: replace a list${\n}      group: a group${\n}       item: name of an item${\n}${\n}Push an item at the end of the list only if this item is not already part of the list:${\n}${\n}   /${tg_trigger_name} push_if_not chanmon nick${\n}${\n}Push two items at the end of the list even if they might already be present:${\n}${\n}   /${tg_trigger_name} push chanmon chan nick;content|clear|push|push_if_not|remove"
group_tools_list.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
group_tools_list.conditions = "${tg_argv_eol1} =~ (?-i)^clear +[abcdefghijklmnopqrstuvwxyz0-9_]+ +[abcdefghijklmnopqrstuvwxyz0-9_]+$ || ${tg_argv_eol1} =~ (?-i)^(content|push|push_if_not|remove) +[abcdefghijklmnopqrstuvwxyz0-9_]+ +[abcdefghijklmnopqrstuvwxyz0-9_]+ +([abcdefghijklmnopqrstuvwxyz0-9_]+ *)+$"
group_tools_list.enabled = on
group_tools_list.hook = command
group_tools_list.post_action = none
group_tools_list.regex = "/.*/${tg_argv1}/my_action /.*/${tg_argv2}/my_group /.*/${tg_argv3}/my_list_name /.*/plugins.var.group_tools.${my_group}/my_opt_prefix /.*/${${my_opt_prefix}.list.${my_list_name}.list}/my_list /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz0-9_]+$?${re:0}}/my_list /.*/${tg_argv_eol4}/my_items / +/,/my_items /.*/${if:${my_action}==push_if_not?${my_items}}/my_push_if_not_items /[^,]+/${if:,${my_list},!-,${re:0},&&,${split:${calc:${re:repl_index}+1},,keep_eol,${my_items}},!-,${re:0},?${re:0}}/my_push_if_not_items /.*/${if:${my_action}==remove?${my_list}}/my_remove_items /[^,]+/${if:,${my_items},!-,${re:0},?${re:0}}/my_remove_items /.*/${if:${my_action}==push_if_not?${my_push_if_not_items}:${if:${my_action}==remove?${my_remove_items}:${re:0}}}/my_items /,+/,/my_items /^,|,$//my_items /.*/${if:${my_action}=~^(content|remove)$?${my_items}:${if:${my_action}=~^push?${re:0},${my_items}}}/my_list /,+/,/my_list /^,|,$//my_list ===$===/mute -core /set ${my_opt_prefix}.list.${my_list_name}.list '${my_list}';===my_cmds_to_run"
group_tools_list.return_code = ok
highmon_monitor.arguments = "*;irc_privmsg,matrix_message,matrix_text"
highmon_monitor.command = "/print -newbuffer ${my_monitor} -tags ${my_tags} \t${my_message}"
highmon_monitor.conditions = "${tg_highlight} == 1 && ${buffer.local_variables.type} == channel && ${buffer.local_variables.no_highmon_like} == && (${plugins.var.group_tools.highmon.all.general.allow_filtered_lines} != || ${tg_displayed} !=) && (${plugins.var.group_tools.highmon.all.general.allow_hidden_channels} != || ${buffer.hidden} ==)"
highmon_monitor.enabled = on
highmon_monitor.hook = print
highmon_monitor.post_action = none
highmon_monitor.regex = "/.*/${split:1,_,,${tg_trigger_name}}/my_monitor /.*/${plugins.var.group_tools.${my_monitor}.list.header.list}/my_list /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz0-9_]+$?${re:0}}/my_list /[^,]+/plugins.var.group_tools.${my_monitor}.item.${re:0}/my_list /[^,]+/${if:${length:${${re:0}.conditions}}==||${eval_cond:${${re:0}.conditions}}?${re:0}}/my_list /,+/,/my_list /^,|,$//my_list /.*/${my_list}/my_bgs /[^,]+/${base_encode:16,${eval:${${re:0}.bg}}}/my_bgs /$/,${base_encode:16,default}/my_bgs /([^,]+)(,|$)/${define:my_fg,${eval:${${re:1}.fg}}}${define:my_bg,${base_decode:16,${split:${re:repl_index},,,${my_bgs}}}}${define:my_separator,${eval:${${re:1}.separator}}}${define:my_min_length,${eval:${${re:1}.min_length}}}${define:my_max_length,${eval:${${re:1}.max_length}}}${define:my_content,${eval:${${re:1}.content}}}${define:my_next_bg,${base_decode:16,${split:${calc:${re:repl_index}+1},,,${my_bgs}}}}${color:${my_fg},${my_bg}} ${cutscr:+${if:${split:1,0,keep_eol+strip_left,${my_max_length}}!~^[1-9][0-9]*$?${calc:${lengthscr:${my_content}}+1}:${my_max_length}},…,${my_content}}${repeat:${calc:${my_min_length}-${lengthscr:${my_content}}}, }${color:${my_fg},${my_bg}} ${if:${plugins.var.group_tools.${my_monitor}.all.general.powerline}!=?${if:${color:${my_bg}}==${color:${my_next_bg}}?${color:${my_separator}}:${color:${my_bg},${my_next_bg}}${color:reset}}:${color:reset} }/my_list /.+/${re:0} /my_list /.*/${tg_tags}/my_tags / //my_tags /.*/${my_list}${tg_message}/my_message"
highmon_monitor.return_code = ok
logo.arguments = "logo;WeeChat Animated Logo;start|stop|toggle|faster|slower || timer <time> [<align> [<number>]] || speed <speed> || color ["<range>..." ["<name>..."]]; start: start the timer${\n}  stop: stop the timer${\n}toggle: toggle the timer${\n}faster: increase the speed of the timer${\n}slower: decrease the speed of the timer${\n} timer: use a custom ms${\n} speed: use a preset${\n} color: specify the colors${\n}  time: number of ms${\n} align: alignment on second${\n}number: max number of calls${\n} speed: one of the following values: ultra, fast, normal, slow${\n} range: a range, eg: 3-35${\n}  name: name of a color${\n}${\n}Let's play with the WeeChat Animated ASCII logo!${\n}${\n}Exemples:${\n}  Start the timer !!${\n}    /logo start${\n}  Change the colors${\n}    /logo color "" "24 31 121 163 229 white";start|stop|toggle|faster|slower || timer 5000|4000|3000|2000|1000 || speed ultra|fast|normal|slow || color 0-255"
logo.command = "/command -buffer core.weechat * /eval ${my_cmds_to_run}"
logo.conditions = "${tg_argv_eol1} =~ ^(start|stop|toggle|faster|slower)$ || ${tg_argv_eol1} =~ ^timer +[0-9]+( +[0-9]+)?( +[0-9]+)?$ || ${tg_argv_eol1} =~ ^speed +(ultra|fast|normal|slow)$ || (${tg_shell_argv1} == color && ${tg_shell_argv2} =~ ^ *(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-6])-([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-6])( +|$))*$ && ${tg_shell_argc} <= 4)"
logo.enabled = on
logo.hook = command
logo.post_action = none
logo.regex = "/.*/${tg_argv1}/my_action /start/enable/my_action /stop/disable/my_action /.*/${trigger.trigger.weechat_logo_random_colors.arguments}/my_hook_args /.*/${split:1,;,,${my_hook_args}}/my_current_ms /.*/${if:${my_action}==timer?${tg_argv3}:${split:2,;,,${my_hook_args}}}/my_align_sec /.*/${if:${my_action}==timer?${tg_argv4}:${split:3,;,,${my_hook_args}}}/my_num_call /.*/${if:${my_action}==faster?${if:${my_current_ms}<=50?${my_current_ms}:${calc:${my_current_ms}-50}}:${if:${my_action}==slower?${calc:${my_current_ms}+50}:${if:${my_action}=~^(speed|timer)$?${tg_argv2}}}}/my_speed /ultra/5/my_speed /fast/50/my_speed /normal/500/my_speed /slow/1000/my_speed /.*/${if:${my_action}==color?${tg_shell_argv2}}/my_colors /([0-9]+)-([0-9]+)/${info:python_eval,print(' '.join(map(str, list(range(${re:1},${re:2})))))}/my_colors /$/${if:${my_action}==color? ${tg_shell_argv3}}/my_colors / +/,/my_colors  /^,|,$//my_colors ===.*===/mute ${if:${my_action}=~(enable|disable|toggle)?/trigger ${my_action} weechat_logo_random_colors:${if:${my_action}==color?/set plugins.var.logo_colors '${my_colors}':/trigger set weechat_logo_random_colors arguments ${my_speed};${my_align_sec};${my_num_call}}}===my_cmds_to_run"
logo.return_code = ok
memory_game.arguments = "memory_game;memory card game by r3m;<lines> <cols> <emojis>; lines: the number of lines${\n}  cols: the number of columns${\n}emojis: a list of emojis (must have enough emojis for the grid size you request)${\n}${\n}Create a grid of 4 lines and 13 cols (require 26 emojis for a grid of 52 cards):${\n}${\n}  /${tg_trigger_name} 4 13 🍅🍌🍒🍓🥒🍇🍉🍋🍍🫐🥕🥦🍭🍕🥨🥑🍐🫒🧅🥣🍿🍟🥔🫑🎂🍬;4 13 🍅🍌🍒🍓🥒🍇🍉🍋🍍🫐🥕🥦🍭🍕🥨🥑🍐🫒🧅🥣🍿🍟🥔🫑🎂🍬"
memory_game.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
memory_game.conditions = "${info:python_version} != && ${tg_argv_eol1} =~ ^[1-9][0-9]* +[1-9][0-9]* . && ${calc:${tg_argv1}*${tg_argv2}} <= ${calc:${length:${tg_argv3}}*2} && ${calc:${tg_argv1}*${tg_argv2}} =~ [02468]$ && ${calc:${length:${tg_argv3}}*2} == ${lengthscr:${tg_argv3}}"
memory_game.enabled = on
memory_game.hook = command
memory_game.post_action = none
memory_game.regex = "/.*/${tg_argv1}/my_nb_lines /.*/${tg_argv2}/my_nb_cols /.*/${tg_argv3}/my_emojis /.*/${cutscr:${calc:${my_nb_lines}*${my_nb_cols}},,${my_emojis}}/my_emojis /.*/${info:python_eval,import random; emoji = list(\x22${repeat:2,${my_emojis}}\x22); random.shuffle(emoji); print(''.join(emoji))}/my_cards /./${re:0}${if:${calc:${re:repl_index}%${my_nb_cols}}==0?|}/my_cards /[^|]/${re:0},/my_cards /.*/${repeat:${calc:${my_nb_lines}*2-1},,}/my_cmds_to_run ===,===${if:${re:repl_index}=~[13579]$?${define:my_cards_line,${calc:${re:repl_index}//2+1}}/mute -core /set plugins.var.memory_game.cards_in_line_${my_cards_line} ${split:${my_cards_line},|,,${my_cards}};/mute -core /set plugins.var.memory_game.cards_state_in_line_${my_cards_line} ${repeat:${my_nb_cols},hidden,};:/print -newbuffer memory_game -free -y ${re:repl_index} ┃${repeat:${calc:${my_nb_cols}*3+1}, }┃;}===my_cmds_to_run ===$===/print -switch -newbuffer memory_game -free -y 0 ┏${repeat:${calc:${my_nb_cols}*3+1},━}┓;/print -newbuffer memory_game -free -y ${calc:${my_nb_lines}*2} ┗${repeat:${calc:${my_nb_cols}*3+1},━}┛;===my_cmds_to_run ===.*===/mute -core /unset -mask plugins.var.memory_game.*;/buffer clear memory_game;/mute -core /set plugins.var.memory_game.lines ${my_nb_lines};/mute -core /set plugins.var.memory_game.cols ${my_nb_cols};/mute -core /set plugins.var.memory_game.cursor_pos 1,1;${re:0}===my_cmds_to_run ===.*===${if:${plugins.var.memory_game.wait}!=?/print -core -error the card animation most complete, please try again in 2 seconds:${re:0}}===my_cmds_to_run"
memory_game.return_code = ok
memory_game_flip_card.arguments = "memory_game_flip_card"
memory_game_flip_card.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
memory_game_flip_card.conditions = ""
memory_game_flip_card.enabled = on
memory_game_flip_card.hook = command
memory_game_flip_card.post_action = none
memory_game_flip_card.regex = "/.*/${tg_argv1}/my_cards_line /.*/${tg_argv2}/my_cards_col /.*/${plugins.var.memory_game.second_card}/my_second_card /.*/${plugins.var.memory_game.cards_state_in_line_${my_cards_line}}/my_updated_states /[^,]+/${if:${re:repl_index}==${my_cards_col}?flipped:${re:0}}/my_updated_states /.*/${if:${my_second_card}!=?${split:1,,,${plugins.var.memory_game.card_1_pos}}}/my_first_card_line /.*/${if:${my_second_card}!=?${split:2,,,${plugins.var.memory_game.card_1_pos}}}/my_first_card_col /.*/${if:${my_second_card}!=?${if:${split:${my_cards_col},,,${plugins.var.memory_game.cards_in_line_${my_cards_line}}}==${split:${my_first_card_col},,,${plugins.var.memory_game.cards_in_line_${my_first_card_line}}}?found:hidden}}/my_result /.*/${if:${my_second_card}!=?${if:${my_first_card_line}==${my_cards_line}?${my_updated_states}:${plugins.var.memory_game.cards_state_in_line_${my_first_card_line}}}}/my_first_card_states /[^,]+/${if:${re:repl_index}==${my_first_card_col}?${my_result}:${re:0}}/my_first_card_states /.*/${if:${my_second_card}!=?${if:${my_first_card_line}==${my_cards_line}?${my_first_card_states}:${my_updated_states}}}/my_second_card_states /[^,]+/${if:${re:repl_index}==${my_cards_col}?${my_result}:${re:0}}/my_second_card_states ===$===/mute -core /set plugins.var.memory_game.cards_state_in_line_${my_cards_line} ${my_updated_states};${if:${my_second_card}==?/mute -core /set plugins.var.memory_game.second_card 1;/mute -core /set plugins.var.memory_game.card_1_pos ${my_cards_line},${my_cards_col}:/mute -core /unset plugins.var.memory_game.second_card;/mute -core /set plugins.var.memory_game.wait 1;/wait 2s /mute -core /set plugins.var.memory_game.cards_state_in_line_${my_first_card_line} ${my_first_card_states};/wait 2s /mute -core /set plugins.var.memory_game.cards_state_in_line_${my_cards_line} ${my_second_card_states};/wait 2s /mute -core /unset plugins.var.memory_game.wait}===my_cmds_to_run"
memory_game_flip_card.return_code = ok
memory_game_input.arguments = "buffer_user_input_memory_game"
memory_game_input.command = "/memory_game_flip_card ${my_cards_line} ${my_cards_col}"
memory_game_input.conditions = "${plugins.var.memory_game.wait} == && ${tg_signal_data} =~ ^[ ]$ && ${split:${split:2,,,${plugins.var.memory_game.cursor_pos}},,,${plugins.var.memory_game.cards_state_in_line_${split:1,,,${plugins.var.memory_game.cursor_pos}}}} == hidden"
memory_game_input.enabled = on
memory_game_input.hook = signal
memory_game_input.post_action = none
memory_game_input.regex = "/.*/${split:1,,,${plugins.var.memory_game.cursor_pos}}/my_cards_line /.*/${split:2,,,${plugins.var.memory_game.cursor_pos}}/my_cards_col"
memory_game_input.return_code = ok
memory_game_item_selected.arguments = "memory_game_item_selected"
memory_game_item_selected.command = "/command -buffer core.weechat * /mute -core /item addreplace memory_game_choose_grid ${\x22\x22} ${\x22}${my_colored_content}${\x22}"
memory_game_item_selected.conditions = "${_bar_item_name} == ${_bar_item_name2} && ${_bar_item_line} == 0 && ${_bar_item_col} == 0 && ${_bar_item_line2} >= 0 && ${_bar_item_col2} >= 0"
memory_game_item_selected.enabled = on
memory_game_item_selected.hook = hsignal
memory_game_item_selected.post_action = none
memory_game_item_selected.regex = "/.*/${calc:${_bar_item_line2}+1}/my_nb_lines /.*/${calc:${_bar_item_col2}+1}/my_nb_cols ===.*===${calc:${my_nb_cols}//2${if:${my_nb_cols}=~[13579]?+1})}===my_nb_cols ===.*===${color:${if:${calc:${my_nb_lines}*${my_nb_cols}}=~[02468]$?121:163}}===my_color /.*/${my_color}▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆/my_selected_lines /[ ▆]/${if:${calc:${re:repl_index}-1-${_bar_item_col2}}==1?${color:reset}}${re:0}/my_selected_lines /$/${raw:${\x5cn}}/my_selected_lines /.*/${repeat:${calc:${_bar_item_line2}+1},${my_selected_lines}}/my_selected_lines /.*/▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆/my_not_selected_lines /.*/${repeat:${calc:13-(${_bar_item_line2}+1)},${my_not_selected_lines}${raw:${\x5cn}}}/my_not_selected_lines /.*/${my_selected_lines}${my_not_selected_lines}/my_colored_content"
memory_game_item_selected.return_code = ok
memory_game_item_start.arguments = "memory_game_item_start"
memory_game_item_start.command = "/play_memory ${my_nb_lines} ${my_nb_cols};/mute -core /item addreplace memory_game_choose_grid ${\x22}${\x22} ${\x22}${repeat:13,▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆ ▆${raw:${\n}}}${\x22};/bar toggle memory_game_choose_grid"
memory_game_item_start.conditions = "${_bar_item_name} == ${_bar_item_name2} && ${_bar_item_line} == 0 && ${_bar_item_col} == 0 && ${_bar_item_line2} >= 0 && ${_bar_item_col2} >= 0"
memory_game_item_start.enabled = on
memory_game_item_start.hook = hsignal
memory_game_item_start.post_action = none
memory_game_item_start.regex = "/.*/${calc:${_bar_item_line2}+1}/my_nb_lines /.*/${calc:${_bar_item_col2}+1}/my_nb_cols ===.*===${calc:${my_nb_cols}//2${if:${my_nb_cols}=~[13579]?+1})}===my_nb_cols"
memory_game_item_start.return_code = ok
memory_game_keyboard.arguments = "memory_game_keyboard"
memory_game_keyboard.command = "/mute -core /set plugins.var.memory_game.cursor_pos ${my_new_cursor_pos};/mute -core /set plugins.var.memory_game.cards_state_in_line_${split:1,,,${my_cursor_pos}} ${plugins.var.memory_game.cards_state_in_line_${split:1,,,${my_cursor_pos}}};/mute -core /set plugins.var.memory_game.cards_state_in_line_${split:1,,,${my_new_cursor_pos}} ${plugins.var.memory_game.cards_state_in_line_${split:1,,,${my_new_cursor_pos}}}"
memory_game_keyboard.conditions = "${tg_argv_eol1} =~ ^(up|down|left|right)$"
memory_game_keyboard.enabled = on
memory_game_keyboard.hook = command
memory_game_keyboard.post_action = none
memory_game_keyboard.regex = "/.*/${tg_argv1}/my_key /.*/${plugins.var.memory_game.cursor_pos}/my_cursor_pos /.*/${split:1,,,${my_cursor_pos}}/my_cards_line /.*/${split:2,,,${my_cursor_pos}}/my_cards_col /.*/${plugins.var.memory_game.lines}/my_nb_lines /.*/${plugins.var.memory_game.cols}/my_nb_cols /.*/${if:${my_key}==left?${if:${my_cards_col}==1?${if:${my_cards_line}==1?${my_nb_lines}:${calc:${my_cards_line}-1}},${my_nb_cols}:${my_cards_line},${calc:${my_cards_col}-1}}:${if:${my_key}==right?${if:${my_cards_col}==${my_nb_cols}?${if:${my_cards_line}==${my_nb_lines}?1:${calc:${my_cards_line}+1}},1:${my_cards_line},${calc:${my_cards_col}+1}}:${if:${my_key}==up?${if:${my_cards_line}==1?${my_nb_lines},${if:${my_cards_col}==1?${my_nb_cols}:${calc:${my_cards_col}-1}}:${calc:${my_cards_line}-1},${my_cards_col}}:${if:${my_key}==down?${if:${my_cards_line}==${my_nb_lines}?1,${if:${my_cards_col}==${my_nb_cols}?1:${calc:${my_cards_col}+1}}:${calc:${my_cards_line}+1},${my_cards_col}}}}}}/my_new_cursor_pos"
memory_game_keyboard.return_code = ok
memory_game_line_modified.arguments = "plugins.var.memory_game.cards_state_in_line_*"
memory_game_line_modified.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
memory_game_line_modified.conditions = "${tg_value} !="
memory_game_line_modified.enabled = on
memory_game_line_modified.hook = config
memory_game_line_modified.post_action = none
memory_game_line_modified.regex = "/.*/${split:-1,_,,${tg_option}}/my_cards_line /.*/${calc:${my_cards_line}*2-1}/my_buffer_line /.*/${plugins.var.memory_game.cursor_pos}/my_cursor_pos /.*/${tg_value}/my_updated_line /([^,]+),/${if:${my_cards_line},${re:repl_index}==${my_cursor_pos}?${color:121}→: }${if:${re:1}==hidden?${color:,31}❓:${if:${re:1}==found?  :${color:,24}${split:${re:repl_index},,,${plugins.var.memory_game.cards_in_line_${my_cards_line}}}}}${color:reset}/my_updated_line /.*/┃${re:0} ┃/my_updated_line /.*/${repeat:${plugins.var.memory_game.lines},,}/my_win /,/${if:${re:repl_index}==${my_cards_line}?${tg_value}:${plugins.var.memory_game.cards_state_in_line_${re:repl_index}}}/my_win /.*/${if:${re:0}=~^(found,)+$?1}/my_win ===$===/print -newbuffer memory_game -free -y ${my_buffer_line} ${my_updated_line};${if:${my_win}!=?/buffer clear memory_game;/print -newbuffer memory_game -free ${color:reset} ${color:*_121}YOU WON!}===my_cmds_to_run"
memory_game_line_modified.return_code = ok
memory_game_mouse.arguments = "memory_game"
memory_game_mouse.command = "/memory_game_flip_card ${my_cards_line} ${my_cards_col}"
memory_game_mouse.conditions = "${plugins.var.memory_game.wait} == && ${_chat_line_y} =~ [13579]$ && ${_chat_line_y} <= ${calc:${plugins.var.memory_game.lines}*2-1} && ${_chat_line_x} > 1 && ${_chat_line_x} <= ${calc:${plugins.var.memory_game.cols}*3} && ${calc:(${_chat_line_x}+1)%3} =~ ^[01]$ && ${split:${calc:(${_chat_line_x}+1)//3},,,${plugins.var.memory_game.cards_state_in_line_${calc:${_chat_line_y}//2+1}}} == hidden"
memory_game_mouse.enabled = on
memory_game_mouse.hook = hsignal
memory_game_mouse.post_action = none
memory_game_mouse.regex = "===.*===${calc:${_chat_line_y}//2+1}===my_cards_line ===.*===${calc:(${_chat_line_x}+1)//3}===my_cards_col"
memory_game_mouse.return_code = ok
modifier_is_nick_valid.arguments = "input_text_display"
modifier_is_nick_valid.command = ""
modifier_is_nick_valid.conditions = "${tg_string_nocolor} =~ ^/nick . && ${buffer.plugin.name} == irc"
modifier_is_nick_valid.enabled = on
modifier_is_nick_valid.hook = modifier
modifier_is_nick_valid.post_action = none
modifier_is_nick_valid.regex = "===.*===${tg_string_nocolor}===my_nick ===^/nick (.+)===${re:1}===my_nick ===^-all (.+)===${re:1}===my_nick ===.*===${if:${tg_string_nocolor}=~^/nick -all[ ]?${info:python_eval,infolist = weechat.infolist_get('irc_server', '', '')\nwhile weechat.infolist_next(infolist):\n if weechat.infolist_integer(infolist, 'is_connected'): print(weechat.infolist_string(infolist, 'name') + ' ')\nweechat.infolist_free(infolist)}:${server}} ===my_servers ===[^ ]+===${re:0} ${info:irc_server_isupport_value,${re:0},NICKLEN} ${info:irc_server_isupport_value,${re:0},CASEMAPPING} ${if:${info:irc_server_isupport_value,${re:0},UTF8MAPPING}!=?${info:irc_server_isupport_value,${re:0},UTF8MAPPING}:no}===my_servers ===([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+)===${re:0} ${if:${info:irc_is_nick,${re:1},${my_nick}}!=?valid:invalid}===my_servers ===([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+)===\n${if:${re:5}==valid?${color:016,046}:${color:016,163}}${re:1} ${color:reverse} NICKLEN = ${calc:${re:2} - ${length:${my_nick}}}/${re:2}  CASEMAPPING = ${re:3}  UTF8MAPPING = ${re:4}${color:016,default}===my_servers ===.*===${re:0} ${my_servers}===tg_string"
modifier_is_nick_valid.return_code = ok
newsmon_add_site_info_tags.arguments = "formatted;irc.libera.##news;irc_privmsg,matrix_message,matrix_text,debug_newsmon"
newsmon_add_site_info_tags.command = ""
newsmon_add_site_info_tags.conditions = "${tg_message_nocolor} =~ ^\[[^]|]+\] +[^ ].* +→ +https?://[^ ]+$"
newsmon_add_site_info_tags.enabled = on
newsmon_add_site_info_tags.hook = line
newsmon_add_site_info_tags.post_action = none
newsmon_add_site_info_tags.regex = "/.*/${lower:${info:news_parse,site_and_sections,${tg_message_nocolor}}}/my_site_and_sections /.*/site_name,site_first_section,site_second_section/my_news_tags /[^,]+/${re:0}_${base_encode:16,${split:${re:repl_index},|,,${my_site_and_sections}}}/my_news_tags /$/${my_news_tags},/tags /\|/ - /my_site_and_sections /$/site_and_sections_${base_encode:16,${my_site_and_sections}},site_title_${base_encode:16,${lower:${info:news_parse,title,${tg_message_nocolor}}}},site_url_${base_encode:16,${info:news_parse,url,${tg_message_nocolor}}},/tags"
newsmon_add_site_info_tags.return_code = ok
newsmon_click_article.arguments = "newsmon_click_article"
newsmon_click_article.command = "/command -buffer ${buffer.full_name} core /input insert ${my_article_url}\x20"
newsmon_click_article.conditions = ""
newsmon_click_article.enabled = on
newsmon_click_article.hook = hsignal
newsmon_click_article.post_action = none
newsmon_click_article.regex = "/.*/${_chat_line_tags}/my_article_url /[^,]+/${if:${re:0}=~^site_url_[[:xdigit:]]+$?${re:0}}/my_article_url /site_url_//my_article_url /,//my_article_url /.*/${base_decode:16,${re:0}}/my_article_url"
newsmon_click_article.return_code = ok
newsmon_click_item.arguments = "newsmon_click_item"
newsmon_click_item.command = "/group_tools_list ${my_action} newsmon_interest newsmon ${my_item}"
newsmon_click_item.conditions = ""
newsmon_click_item.enabled = on
newsmon_click_item.hook = hsignal
newsmon_click_item.post_action = none
newsmon_click_item.regex = "/.*/${plugins.var.group_tools.newsmon_interest.list.all_items.list}/my_list /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz_]+$?${re:0}}/my_list /[^,]+/${if:${calc:${re:repl_index}-1}==${_bar_item_line}?${re:0}}/my_list /,//my_list /.*/${my_list}/my_item /.*/${if:${_key}==button1?content:${if:,${plugins.var.group_tools.newsmon_interest.list.newsmon.list},=-,${my_item},?remove:push}}/my_action"
newsmon_click_item.return_code = ok
newsmon_filter_rebuild.arguments = "plugins.var.group_tools.newsmon_interest.list.news.list;plugins.var.group_tools.newsmon_interest.list.newsmon.list"
newsmon_filter_rebuild.command = "/mute -core /filter addreplace ${my_list}_interest ${my_buffer} ${my_tags} *"
newsmon_filter_rebuild.conditions = ""
newsmon_filter_rebuild.enabled = on
newsmon_filter_rebuild.hook = config
newsmon_filter_rebuild.post_action = none
newsmon_filter_rebuild.regex = "/.*/${split:6,.,,${tg_option}}/my_list /.*/${raw:${${my_opt}_name},${${my_opt}_first_section},${${my_opt}_second_section},${${my_opt}_and_sections},${${my_opt}_name_start_with},${${my_opt}_first_section_start_with},${${my_opt}_second_section_start_with},${${my_opt}_and_sections_start_with},${${my_opt}_name_end_with},${${my_opt}_first_section_end_with},${${my_opt}_second_section_end_with},${${my_opt}_and_sections_end_with},${${my_opt}_name_contain},${${my_opt}_first_section_contain},${${my_opt}_second_section_contain},${${my_opt}_and_sections_contain},${${my_opt}_title},${${my_opt}_title_start_with},${${my_opt}_title_end_with},${${my_opt}_title_contain}}/my_options /.*/${my_options}/my_options2 /,/+/my_options2 /.*/${tg_value}/my_interests /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz_]+$?${re:0}}/my_interests /,+/,/my_interests /^,|,$//my_interests /.*/${my_interests}/my_no_site_tags /([^,]+),?/${define:my_opt,plugins.var.group_tools.newsmon_interest.item.${re:1}.tags_no_site}${eval:${my_options}},/my_no_site_tags /,+/,/my_no_site_tags /^,|,$//my_no_site_tags /.*/${my_interests}/my_site_tags /([^,]+),?/${define:my_opt,plugins.var.group_tools.newsmon_interest.item.${re:1}.tags_site}${eval:${my_options2}}+/my_site_tags /[+]+/+/my_site_tags /^[+]|[+]$//my_site_tags /.*/${my_no_site_tags},${my_site_tags}/my_tags /^,|,$//my_tags /^$/!hide_everything/my_tags /.*/${if:${my_list}==newsmon?core.newsmon:${if:${plugins.var.group_tools.newsmon.all.general.buffer_full_name}!=?${plugins.var.group_tools.newsmon.all.general.buffer_full_name}:irc.libera.##news}}/my_buffer"
newsmon_filter_rebuild.return_code = ok
newsmon_interest.arguments = "newsmon_interest;manage newsmon categories of interest;add <name> ${\x22}<option>${\x22} ${\x22}<value>${\x22} [${\x22}<option>${\x22} ${\x22}<value>${\x22}...] || del|enable|disable <name> [<name>...];    add: add or change a category${\n}    del: delete one or more categories${\n} enable: enable some categories${\n}disable: disable some categories${\n}   name: name of a category${\n} option: (no_)?site_(name|first_section|second_section|and_sections|title)(_contain|_start_with|_end_with)?${\n}  value: a list of sites attributes separated by pipe${\n}${\n}-----${\n}${\n}Here is the format of an article:${\n}${\n}    ${color:white,31} site_name  first_section  second_section ${color:31,default}${color:reset} article_title → article_url${\n}${\n}Not every articles have a first or second section.${\n}${\n}-----${\n}${\n}Examples of articles:${\n}${\n}    ${color:white,13} Phoronix ${color:13,default}${color:reset} Hardware Timestamping... → https://www.phoronix.com/...${\n}    ${color:white,130} Science Daily  all ${color:130,default}${color:reset} How glyphosate... → https://www.sciencedaily.com/...${\n}${\n}-----${\n}${\n}Create a tech category matching ${color:underline}exactly${color:-underline} the site ${color:bold}Phoronix${color:-bold} and ${color:bold}Ars Technica${color:-bold} in addition to all articles with a first section ${color:underline}containing${color:-underline} ${color:bold}tech${color:-bold}:${\n}${\n}${color:121}    /newsmon_interest add tech ${\x22}site_name${\x22} ${\x22}Phoronix|Ars Technica${\x22} ${\x22}site_first_section_contain${\x22} ${\x22}tech${\x22}${\n}${\n}Create a India category ${color:underline}containing${color:-underline} ${color:bold}India${color:-bold} in their site name, site first section, site second section or articles title:${\n}${\n}${color:121}    /newsmon_interest add India ${\x22}site_and_sections_contain${\x22} ${\x22}India${\x22} ${\x22}site_title_contain${\x22} ${\x22}India${\x22}${\n}${\n}In the previo:w:wus examples, notice how the options and values are surrounded by ${\x22}${\x22}. You ${color:bold}must${color:-bold} use those if one of those contains a space but it is recommended to err on the side of caution and always use them.${\n}${\n}-----${\n}${\n}You can obtain the list of sites by visiting the URL in the topic of the ##news-chat channel on libera;add|del|enable|disable"
newsmon_interest.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
newsmon_interest.conditions = "${tg_argv_eol1} =~ (?-i)^add +[abcdefghijklmnopqrstuvwxyz_]+ . || ${tg_argv_eol1} =~ (?-i)^(del|enable|disable) +([abcdefghijklmnopqrstuvwxyz_]+ *)+$"
newsmon_interest.enabled = on
newsmon_interest.hook = command
newsmon_interest.post_action = none
newsmon_interest.regex = "/.*/${tg_argv1}/my_action /.*/${if:${my_action}==add?${tg_argv2}:${tg_argv_eol2}}/my_items /.*/${if:${my_action}=~^(add|enable)$?push_if_not:remove}/my_group_tools_list_action /.*/${if:${my_action}=~^(add|del)$?all_items,news,}newsmon/my_lists /.*/${if:${my_action}==add?${repeat:${calc:${tg_shell_argc}-3},,}}/my_add_cmds /,/${if:${re:repl_index}=~[13579]$&&${tg_shell_argv${calc:${re:repl_index}+2}}=~^[abcdefghijklmnopqrstuvwxyz_]+$?${calc:${re:repl_index}+2},}/my_add_cmds ===([^,]+),?===${define:my_option,${tg_shell_argv${re:1}}}${define:my_value,${tg_shell_argv${calc:${re:1}+1}}}/mute -core /set plugins.var.group_tools.newsmon_interest.item.${my_items}.${my_option} '\${base_decode:16,${base_encode:16,${my_value}}}';===my_add_cmds /$/${my_add_cmds}/my_cmds_to_run ===$===${if:${my_action}==del?/group_tools del newsmon_interest ${my_items};}===my_cmds_to_run ===$===/group_tools ${my_group_tools_list_action} newsmon_interest ${my_lists} ${my_items}===my_cmds_to_run"
newsmon_interest.return_code = ok
newsmon_item_rebuild.arguments = "plugins.var.group_tools.newsmon_interest.list.all_items.list;plugins.var.group_tools.newsmon_interest.list.newsmon.list"
newsmon_item_rebuild.command = "/mute -core /set plugins.var.group_tools.newsmon_interest.all.general.bar_item_base16_encoded_content '${my_item}';/item refresh newsmon_interest"
newsmon_item_rebuild.conditions = ""
newsmon_item_rebuild.enabled = on
newsmon_item_rebuild.hook = config
newsmon_item_rebuild.post_action = none
newsmon_item_rebuild.regex = "/.*/${plugins.var.group_tools.newsmon_interest.list.all_items.list}/my_content /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz_]+$?${re:0}}/my_content /,+/,/my_content /^,|,$//my_content /([^,]+),?/${define:my_display,${plugins.var.group_tools.newsmon_interest.item.${re:1}.display}}${define:my_display,${if:${length:${my_display}}==?${re:1}:${my_display}}}${define:my_color,${if:,${plugins.var.group_tools.newsmon_interest.list.newsmon.list},=-,${re:1},?45:24}}${color:${my_color}}${color:darkgray,${my_color}}${cutscr:+5,…,${my_display}}${color:reset}${color:${my_color}}\n/my_content /.*/${base_encode:16,${my_content}}/my_item"
newsmon_item_rebuild.return_code = ok
newsmon_monitor.arguments = "irc.libera.##news;irc_privmsg,matrix_message,matrix_text,debug_newsmon"
newsmon_monitor.command = "/print -newbuffer ${my_monitor} -tags ${my_tags} \t${my_message}"
newsmon_monitor.conditions = "(${plugins.var.group_tools.newsmon.all.general.allow_filtered_lines} != || ${tg_displayed} !=) && ${tg_message_nocolor} =~ ^\[[^]|]+\] +[^ ].* +→ +https?://[^ ]+$"
newsmon_monitor.enabled = on
newsmon_monitor.hook = print
newsmon_monitor.post_action = none
newsmon_monitor.regex = "/.*/${info:news_parse,site_and_sections,${tg_message_nocolor}}/my_site_and_sections /.*/${split:1,|,,${my_site_and_sections}}/my_site /.*/${split:2,|,,${my_site_and_sections}}/my_first_section /.*/${split:3,|,,${my_site_and_sections}}/my_second_section /.*/${info:news_parse,title,${tg_message_nocolor}}/my_title /.*/${info:news_parse,url,${tg_message_nocolor}}/my_url /.*/${split:1,_,,${tg_trigger_name}}/my_monitor /.*/${plugins.var.group_tools.${my_monitor}.list.header.list}/my_list /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz_]+$?${re:0}}/my_list /[^,]+/plugins.var.group_tools.${my_monitor}.item.${re:0}/my_list /[^,]+/${if:${length:${${re:0}.conditions}}==||${eval_cond:${${re:0}.conditions}}?${re:0}}/my_list /,+/,/my_list /^,|,$//my_list /.*/${my_list}/my_bgs /[^,]+/${base_encode:16,${eval:${${re:0}.bg}}}/my_bgs /$/,${base_encode:16,default}/my_bgs /([^,]+)(,|$)/${define:my_fg,${eval:${${re:1}.fg}}}${define:my_bg,${base_decode:16,${split:${re:repl_index},,,${my_bgs}}}}${define:my_separator,${eval:${${re:1}.separator}}}${define:my_min_length,${eval:${${re:1}.min_length}}}${define:my_max_length,${eval:${${re:1}.max_length}}}${define:my_content,${eval:${${re:1}.content}}}${define:my_next_bg,${base_decode:16,${split:${calc:${re:repl_index}+1},,,${my_bgs}}}}${color:${my_fg},${my_bg}} ${cutscr:+${if:${split:1,0,keep_eol+strip_left,${my_max_length}}!~^[1-9][0-9]*$?${calc:${lengthscr:${my_content}}+1}:${my_max_length}},…,${my_content}}${repeat:${calc:${my_min_length}-${lengthscr:${my_content}}}, }${color:${my_fg},${my_bg}} ${if:${plugins.var.group_tools.${my_monitor}.all.general.powerline}!=?${if:${color:${my_bg}}==${color:${my_next_bg}}?${color:${my_separator}}:${color:${my_bg},${my_next_bg}}${color:reset}}:${color:reset} }/my_list /.+/${re:0} /my_list /.*/${tg_tags}/my_tags / //my_tags /.*/${my_list}${my_title}${if:${plugins.var.group_tools.newsmon.all.general.keep_url}!=? → ${my_url}}/my_message"
newsmon_monitor.return_code = ok
newsmon_parse_tools.arguments = "news_parse"
newsmon_parse_tools.command = ""
newsmon_parse_tools.conditions = ""
newsmon_parse_tools.enabled = on
newsmon_parse_tools.hook = info
newsmon_parse_tools.post_action = none
newsmon_parse_tools.regex = "/.*/${split:1,,,${tg_arguments}}/my_var /.*/${split:2,,keep_eol,${tg_arguments}}/my_message /.*/${my_message}/my_site_and_sections /.*/${my_message}/my_title /^\[([^]]+)\].*/${re:1}/my_site_and_sections / - /|/my_site_and_sections /^\[[^]]+\] (.*)/${re:1}/my_title /.*/${split:-1, ,,${my_title}}/my_url / [^ ]+ [^ ]+$//my_title /.*/${my_${my_var}}/tg_info"
newsmon_parse_tools.return_code = ok
newsmon_tags_rebuild.arguments = "plugins.var.group_tools.newsmon_interest.item.*"
newsmon_tags_rebuild.command = "/set plugins.var.group_tools.newsmon_interest.item.${my_item}.tags_${my_option} '${my_tags}'"
newsmon_tags_rebuild.conditions = "${split:6,.,,${tg_option}} =~ ^[abcdefghijklmnopqrstuvwxyz_]+$ && ${split:7,.,,${tg_option}} =~ ^(no_)?site_(name|first_section|second_section|and_sections|title)(_start_with|_end_with|_contain)?$"
newsmon_tags_rebuild.enabled = on
newsmon_tags_rebuild.hook = config
newsmon_tags_rebuild.post_action = none
newsmon_tags_rebuild.regex = "/.*/${split:6,.,,${tg_option}}/my_item /.*/${split:7,.,,${tg_option}}/my_option /.*/${my_option}/my_tag_prefix /^no_//my_tag_prefix /_(contain|start_with|end_with)$//my_tag_prefix /.*/${lower:${tg_value}}/my_tags /[^|]+/${if:${my_option}=~(end_with|contain)$?*}${base_encode:16,${re:0}}${if:${my_option}=~(start_with|contain)$?*}/my_tags /\|+/|/my_tags /^\||\|$//my_tags /.+/${if:${my_option}!~^no_?!}${my_tag_prefix}_${re:0}/my_tags /\|/${if:${my_option}=~^no_?,:+!}${my_tag_prefix}_/my_tags"
newsmon_tags_rebuild.return_code = ok
no_notify_duck_command.arguments = "*;irc.*;irc_privmsg"
no_notify_duck_command.command = ""
no_notify_duck_command.conditions = "${tg_message_nocolor} =~ ^[!,.](bef|bang|reload|shop|duckstats|friends|killers)(\s|$) && ${buffer.local_variables.type} == channel"
no_notify_duck_command.enabled = on
no_notify_duck_command.hook = line
no_notify_duck_command.post_action = none
no_notify_duck_command.regex = "/.*/-1/notify_level"
no_notify_duck_command.return_code = ok
nullpointer.arguments = "nullpointer"
nullpointer.command = "/command -buffer ${buffer.full_name} core /input delete_line;/command -buffer ${buffer.full_name} core /input insert ${out}"
nullpointer.conditions = ""
nullpointer.enabled = on
nullpointer.hook = hsignal
nullpointer.post_action = none
nullpointer.regex = "/\n//out"
nullpointer.return_code = ok
slack_matrix_server_search.arguments = "slack_matrix_server_search"
slack_matrix_server_search.command = ""
slack_matrix_server_search.conditions = "${info:python_version} != && ${tg_arguments} != && (${buffer[${tg_arguments}].local_variables.script_name} =~ ^(slack|matrix)$ || ${buffer[${tg_arguments}].local_variables.plugin} == matrix)"
slack_matrix_server_search.enabled = on
slack_matrix_server_search.hook = info
slack_matrix_server_search.post_action = none
slack_matrix_server_search.regex = "/.*/${buffer[${tg_arguments}].local_variables.plugin}/my_plugin /.*/${buffer[${tg_arguments}].local_variables.script_name}/my_script /.*/${if:${my_plugin}==matrix||${my_script}==matrix?server.}/my_server_prefix /.*/${buffer[${tg_arguments}].local_variables.server}/my_server /.*/${my_plugin}.${my_server_prefix}${my_server}/my_server_full_name ==\x5c\x5c==\x5c\x5c==my_server_full_name =='==\'==my_server_full_name /.*/${info:python_eval,print(weechat.buffer_search('==', '${my_server_full_name}'))}/tg_info"
slack_matrix_server_search.return_code = ok
sliding_game.arguments = "sliding_game;sliding game by r3m;<number>;number: create a grid of number*number${\n}${\n}This is a sliding game (or also named the fifteen) for WeeChat. You need to reorder the number. You can create a 3x3, 4x4, 5x5, 6x6, 7x7, 8x8 and 9x9 grid. In fact you can play with a larger grid by modifying the conditions of the trigger but it is not recommended, it will be very slow.${\n}${\n}Play a 3x3 grid:${\n}${\n}  /${tg_trigger_name} 3;3"
sliding_game.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
sliding_game.conditions = "${info:python_version} != && ${tg_argv_eol1} =~ ^[3-9]?$"
sliding_game.enabled = on
sliding_game.hook = command
sliding_game.post_action = none
sliding_game.regex = "/.*/${if:${tg_argv1}==?3:${tg_argv1}}/my_nb /.*/${info:python_eval,import random; number = list(map(str, range(0,${calc:${my_nb}*${my_nb}}))); random.shuffle(number); print(','.join(number))}/my_random_numbers /.*/${my_random_numbers}/my_inversions /[^,]+/${if:${re:0}==0?0:${info:sliding_game_how_many_inversion,${split:${re:repl_index},,keep_eol,${my_inversions}}}}/my_inversions /,/+/my_inversions /.*/${calc:${my_inversions}}/my_inversions /.*/${my_random_numbers}/my_space_line ===[^,]+===${if:${re:0}==0?${calc:(${re:repl_index}-1)//${my_nb}}}===my_space_line /,//my_space_line /.*/${if:${my_nb}=~[02468]$?${calc:${re:0}+${my_space_line}}:${re:0}}/my_inversions /,/,,/my_random_numbers /^([^,]+),,([^,]+),(.*),([^,]+),,([^,]+)$/${if:${my_nb}=~[02468]$&&${my_inversions}=~[02468]$||${my_nb}=~[13579]$&&${my_inversions}=~[13579]$?${if:,${re:1},${re:2},!~,0,?${re:2},${re:1},${re:3},${re:4},${re:5}:${re:1},${re:2},${re:3},${re:5},${re:4}}:${re:0}}/my_random_numbers /,+/,/my_random_numbers /(^|,)0/${re:1} /my_random_numbers ===.*===/buffer clear sliding_game;/mute -core /unset -mask plugins.var.sliding_game.*;/mute -core /set plugins.var.sliding_game.random_numbers \x22${my_random_numbers}\x22;/mute -core /set plugins.var.sliding_game.nb ${my_nb};/sliding_game_draw===my_cmds_to_run"
sliding_game.return_code = ok
sliding_game_draw.arguments = "sliding_game_draw"
sliding_game_draw.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
sliding_game_draw.conditions = ""
sliding_game_draw.enabled = on
sliding_game_draw.hook = command
sliding_game_draw.post_action = none
sliding_game_draw.regex = "/.*/${plugins.var.sliding_game.nb}/my_nb /.*/${plugins.var.sliding_game.moves}/my_moves /^$/0/my_moves /.*/${plugins.var.sliding_game.random_numbers}/my_random_numbers /.*/${my_random_numbers}/my_inversions /(^|,) ($|,)//my_inversions /[^,]+/${info:sliding_game_how_many_inversion,${split:${re:repl_index},,keep_eol,${my_inversions}}}/my_inversions /,/+/my_inversions /.*/${calc:${my_inversions}}/my_inversions /.*/${if:${my_inversions}==&&${my_random_numbers}=~[ ]$?1:0}/my_win /.*/${repeat:${calc:${my_nb}*${my_nb}},,}/my_cmds_to_run ===,===${define:my_cell_value,${split:${re:repl_index},,,${my_random_numbers}}}${define:my_cell_line_number,${calc:(${re:repl_index}-1)//${my_nb}+1}}${define:my_cell_width,9}${define:my_cell_modulo_nb_cols,${calc:${re:repl_index}%${my_nb}}}${define:my_cell_value_modulo_nb_cols,${calc:${my_cell_value}%${my_nb}}}${if:${my_cell_modulo_nb_cols}==1?${if:${my_cell_line_number}==1?┏${repeat:${calc:${my_nb}-1},━━━━━━━━━┳}━━━━━━━━━┓;}┃}${if:${my_win}!=&&${my_cell_value}=~[ ]?${color:*_121}YOU WON!${color:reset} :${if:${my_cell_value_modulo_nb_cols}==1?${color:*white}:${color:*31}}${my_cell_value}${color:reset}${repeat:${calc:${my_cell_width}-${length:${my_cell_value}}}, }}┃${if:${my_cell_modulo_nb_cols}==0?;${repeat:2,┃${repeat:${my_nb},         ┃};}${if:${my_cell_line_number}!=${my_nb}?┣${repeat:${calc:${my_nb}-1},━━━━━━━━━╋}━━━━━━━━━┫:┗${repeat:${calc:${my_nb}-1},━━━━━━━━━┻}━━━━━━━━━┛;${color:31}Moves: ${color:reset}${my_moves}};}===my_cmds_to_run ===[^;]+===/print -newbuffer sliding_game -free -y ${calc:${re:repl_index}-1} ${re:0}===my_cmds_to_run ===$===${if:${my_win}!=?/mute -core /set plugins.var.sliding_game.win 1}===my_cmds_to_run"
sliding_game_draw.return_code = ok
sliding_game_how_many_inversion.arguments = "sliding_game_how_many_inversion"
sliding_game_how_many_inversion.command = ""
sliding_game_how_many_inversion.conditions = ""
sliding_game_how_many_inversion.enabled = on
sliding_game_how_many_inversion.hook = info
sliding_game_how_many_inversion.post_action = none
sliding_game_how_many_inversion.regex = "/.*/${tg_arguments}/my_number /,0//my_number /.*/${my_number}/my_remaining /^([^,]+).*/${re:1}/my_number /^[^,]+(.*)/${re:1}/my_remaining /[^,]+/${if:${my_number}>${re:0}?.}/my_remaining /,//my_remaining /.*/${length:${my_remaining}}/tg_info"
sliding_game_how_many_inversion.return_code = ok
sliding_game_keyboard.arguments = "sliding_game_keyboard"
sliding_game_keyboard.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
sliding_game_keyboard.conditions = "${plugins.var.sliding_game.win} == && ${buffer.full_name} == core.sliding_game && ${tg_argv_eol1} =~ ^(up|down|left|right)$"
sliding_game_keyboard.enabled = on
sliding_game_keyboard.hook = command
sliding_game_keyboard.post_action = none
sliding_game_keyboard.regex = "/.*/${tg_argv1}/my_key /.*/${plugins.var.sliding_game.nb}/my_nb /.*/${plugins.var.sliding_game.random_numbers}/my_random_numbers /.*/${my_random_numbers}/my_space_cell_index /[^,]+/${if:${re:0}=~[ ]?${re:repl_index}}/my_space_cell_index /,//my_space_cell_index ===.*===${calc:(${my_space_cell_index}-1)//${my_nb}+1}===my_space_cell_line /.*/${calc:${my_space_cell_index}%${my_nb}}/my_space_cell_col /.*/${if:${my_key}==up?below:${if:${my_key}==down?above:${if:${my_key}==left?right:left}}}/my_direction /.*/${info:sliding_game_look_${my_direction},${my_nb},${my_space_cell_line},${my_space_cell_col},${my_space_cell_index},number,${my_random_numbers}}/my_number_cell_value / /${if:${my_number_cell_value}!=?-: }/my_random_numbers /[^,]+/${if:${re:0}==${my_number_cell_value}&&${my_number_cell_value}!=? :${re:0}}/my_random_numbers /-/${my_number_cell_value}/my_random_numbers ===$===/mute -core /set plugins.var.sliding_game.random_numbers \x22${my_random_numbers}\x22${if:${my_number_cell_value}!=?;/mute -core /set plugins.var.sliding_game.moves ${calc:${plugins.var.sliding_game.moves}+1};/sliding_game_draw}===my_cmds_to_run"
sliding_game_keyboard.return_code = ok
sliding_game_look_around.arguments = "sliding_game_look_around;sliding_game_look_above;sliding_game_look_below;sliding_game_look_left;sliding_game_look_right"
sliding_game_look_around.command = ""
sliding_game_look_around.conditions = ""
sliding_game_look_around.enabled = on
sliding_game_look_around.hook = info
sliding_game_look_around.post_action = none
sliding_game_look_around.regex = "/.*/${split:1,,,${tg_arguments}}/my_nb /.*/${split:2,,,${tg_arguments}}/my_cell_line /.*/${split:3,,,${tg_arguments}}/my_cell_col /.*/${split:4,,,${tg_arguments}}/my_cell_index /.*/${if:${split:5,,,${tg_arguments}}==space?[ ]:.}/my_search_for /.*/${split:6,,keep_eol,${tg_arguments}}/my_random_numbers /.*/${if:${my_cell_line}>1?${split:${calc:${my_cell_index}-${my_nb}},,,${my_random_numbers}}}/my_above_cell_value /.*/${split:${calc:${my_cell_index}+${my_nb}},,,${my_random_numbers}}/my_below_cell_value /.*/${if:${calc:${my_cell_col}%${my_nb}}!=1?${split:${calc:${my_cell_index}-1},,,${my_random_numbers}}}/my_left_cell_value /.*/${if:${calc:${my_cell_col}%${my_nb}}!=0?${split:${calc:${my_cell_index}+1},,,${my_random_numbers}}}/my_right_cell_value /.*/${if:${tg_info_name}!~around?${my_${split:-1,_,,${tg_info_name}}_cell_value}:${if:${my_above_cell_value}=~${my_search_for}?above:${if:${my_below_cell_value}=~${my_search_for}?below:${if:${my_left_cell_value}=~${my_search_for}?left:${if:${my_right_cell_value}=~${my_search_for}?right}}}}}/tg_info"
sliding_game_look_around.return_code = ok
sliding_game_mouse.arguments = "sliding_game"
sliding_game_mouse.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
sliding_game_mouse.conditions = "${define:my_nb_lines_and_cols,${plugins.var.sliding_game.nb}}${plugins.var.sliding_game.win} == && ${_chat_line_x} < ${calc:${my_nb_lines_and_cols}*9+${my_nb_lines_and_cols}} && ${_chat_line_x} !~ 0$ && ${_chat_line_y} > 0 && ${_chat_line_y} < ${calc:${my_nb_lines_and_cols}*3+${my_nb_lines_and_cols}} && ${calc:${_chat_line_y}%4} != 0"
sliding_game_mouse.enabled = on
sliding_game_mouse.hook = hsignal
sliding_game_mouse.post_action = none
sliding_game_mouse.regex = "/.*/${plugins.var.sliding_game.nb}/my_nb ===.*===${calc:${_chat_line_y}//4+1}===my_cell_line ===.*===${calc:${_chat_line_x}//10+1}===my_cell_col ===.*===${calc:(${my_cell_line} - 1)*${my_nb}+${my_cell_col}}===my_cell_index /.*/${plugins.var.sliding_game.random_numbers}/my_random_numbers /.*/${split:${my_cell_index},,,${my_random_numbers}}/my_cell_value /.*/${info:sliding_game_look_around,${my_nb},${my_cell_line},${my_cell_col},${my_cell_index},space,${my_random_numbers}}/my_space_relative_position / /${if:${my_space_relative_position}!=?-: }/my_random_numbers /[^,]+/${if:${re:0}==${my_cell_value}&&${my_space_relative_position}!=? :${re:0}}/my_random_numbers /-/${my_cell_value}/my_random_numbers ===$===/mute -core /set plugins.var.sliding_game.random_numbers \x22${my_random_numbers}\x22${if:${my_space_relative_position}!=?;/mute -core /set plugins.var.sliding_game.moves ${calc:${plugins.var.sliding_game.moves}+1};/sliding_game_draw}===my_cmds_to_run"
sliding_game_mouse.return_code = ok
sliding_game_number_input.arguments = "buffer_user_input_sliding_game"
sliding_game_number_input.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
sliding_game_number_input.conditions = "${plugins.var.sliding_game.win} == && ${tg_signal_data} =~ ^[1-9][0-9]*$ && ${tg_signal_data} < ${calc:${plugins.var.sliding_game.nb}*${plugins.var.sliding_game.nb}}"
sliding_game_number_input.enabled = on
sliding_game_number_input.hook = signal
sliding_game_number_input.post_action = none
sliding_game_number_input.regex = "/.*/${tg_signal_data}/my_input /.*/${plugins.var.sliding_game.nb}/my_nb /.*/${plugins.var.sliding_game.random_numbers}/my_random_numbers /.*/${my_random_numbers}/my_number_cell_index /[^,]+/${if:${re:0}=~^${my_input}$?${re:repl_index}}/my_number_cell_index /,//my_number_cell_index ===.*===${calc:(${my_number_cell_index}-1)//${my_nb}+1}===my_number_cell_line /.*/${calc:${my_number_cell_index}%${my_nb}}/my_number_cell_col /.*/${info:sliding_game_look_around,${my_nb},${my_number_cell_line},${my_number_cell_col},${my_number_cell_index},space,${my_random_numbers}}/my_space_relative_position / /${if:${my_space_relative_position}!=?-: }/my_random_numbers /[^,]+/${if:${re:0}==${my_input}&&${my_space_relative_position}!=? :${re:0}}/my_random_numbers /-/${my_input}/my_random_numbers ===$===/mute -core /set plugins.var.sliding_game.random_numbers \x22${my_random_numbers}\x22${if:${my_space_relative_position}!=?;/mute -core /set plugins.var.sliding_game.moves ${calc:${plugins.var.sliding_game.moves}+1};/sliding_game_draw}===my_cmds_to_run"
sliding_game_number_input.return_code = ok
sys_usage_item_rebuild.arguments = "1000;0;0"
sys_usage_item_rebuild.command = "/mute -core /set plugins.var.group_tools.sys_usage.all.general.bar_item_base16_encoded_content '${my_item}';/item refresh sys_usage"
sys_usage_item_rebuild.conditions = ""
sys_usage_item_rebuild.enabled = on
sys_usage_item_rebuild.hook = timer
sys_usage_item_rebuild.post_action = none
sys_usage_item_rebuild.regex = "/.*/${plugins.var.group_tools.sys_usage.list.sys_usage.list}/my_content /[^,]+/${if:${re:0}=~^[abcdefghijklmnopqrstuvwxyz0-9_]+$?${re:0}}/my_content /,+/,/my_content /^,|,$//my_content /([^,]+),?/${eval:${color:bar_delim}${plugins.var.group_tools.sys_usage.all.general.separator} ${color:reset}${plugins.var.group_tools.sys_usage.item.${re:1}.display} ${color:reset}${plugins.var.group_tools.sys_usage.item.${re:1}.content}}\n/my_content /.*/${base_encode:16,${my_content}}/my_item"
sys_usage_item_rebuild.return_code = ok
toggle_bufautoset.arguments = "toggle_bufautoset;toggle bufautoset options;<buffer_property> <buffer_fullname>;buffer_property: name of the property${\n}buffer_fullname: name of the buffer${\n}${\n}The buffer_autoset.py script has no toggle mechanism so this command bring this functionality. Also, the script does not reset a property or localvar after deleting them. For example, if you type /buffer_autoset add irc.libera.#weechat localvar_set_something 1, and then, /buffer_autoset del irc.libera.#weechat.localvar_set_something, the localvar will still appears in /buffer localvar until you close and reoppen the buffer. This command will remove the localvar and hidden property upon deletion. You should use this command only for properties that take 0 or 1 as value or localvar that take 0 or 1.;;"
toggle_bufautoset.command = "/mute /buffer_autoset ${my_action} ${my_params};/command -buffer ${my_full_name} * /buffer set ${my_property} ${if:${my_action}==add?1:0}"
toggle_bufautoset.conditions = "${tg_argv2} !="
toggle_bufautoset.enabled = on
toggle_bufautoset.hook = command
toggle_bufautoset.post_action = none
toggle_bufautoset.regex = "/.*/${tg_argv1}/my_property /.*/${tg_argv2}/my_full_name /.*/${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}!=?del:add}/my_action /.*/${if:${my_action}==add? ${my_full_name} ${my_property} 1: ${my_full_name}.${my_property}}/my_params"
toggle_bufautoset.return_code = ok
toggle_property.arguments = "toggle_property"
toggle_property.command = "/toggle_bufautoset ${my_property} ${my_full_name}"
toggle_property.conditions = ""
toggle_property.enabled = on
toggle_property.hook = hsignal
toggle_property.post_action = none
toggle_property.regex = "/.*/${if:${_chat}!=?${_buffer_full_name}:${full_name}}/my_full_name /.*/${if:${_chat}!=?${_buffer_plugin}:${plugin}}/my_plugin /.*/${if:${_chat}!=?${_buffer_localvar_server}:${localvar_server}}/my_server /.*/${buffer[${pointer}].local_variables.script_name}/my_script_name /.*/${if:${_key}==f?${my_plugin}.${if:${my_plugin}==irc||${my_script_name}==matrix||${my_plugin}==matrix?server.}${my_server}:${re:0}}/my_full_name /.*/${_key}/my_property /^button1.*/localvar_set_control_buffer${if:${_bar_name2}==control_buffers2?2}/my_property /(?-i)^c$/localvar_set_control_buffer/my_property /(?-i)^C$/localvar_set_control_buffer2/my_property /(?-i)^n$/localvar_set_no_chanmon_like/my_property /(?-i)^f$/localvar_set_fold/my_property /(?-i)^h$/hidden/my_property"
toggle_property.return_code = ok
translate.arguments = "weechat_print"
translate.command = ""
translate.conditions = "${tg_tags} =~ ,exec_cmd_translated_(text|lang),"
translate.enabled = on
translate.hook = modifier
translate.post_action = none
translate.regex = "/.*/${color:*_31}${if:${tg_tags}=~,exec_cmd_translated_text,?Translation:Language}${color:reset}\t${tg_message_nocolor}/"
translate.return_code = ok
translate_hsignal.arguments = "translate"
translate_hsignal.command = "/command -buffer ${_buffer_full_name} * /exec -norc -name ${my_cmd_suffix}"
translate_hsignal.conditions = ""
translate_hsignal.enabled = on
translate_hsignal.hook = hsignal
translate_hsignal.post_action = none
translate_hsignal.regex = "/.*/${info:spell_dict,${_buffer}}/my_main_spell_dict /,.*//my_main_spell_dict /.*/${env:LANG}/my_env_lang /_.*//my_env_lang /.*/${_buffer_localvar_translate_lang},${if:${_buffer_localvar_type}=~^(channel|private)$?${buffer[${if:${_buffer_plugin}==irc?${info:irc_buffer,${_buffer_localvar_server}}:${info:slack_matrix_server_search,${_buffer}}}].local_variables.translate_lang}},${plugins.var.translate_lang},${my_main_spell_dict},${my_env_lang}/my_lang /.*/${my_lang}/my_debug /^,+//my_lang /([^,]+).*/${re:1}/my_lang /'/'\''/my_lang /.*/${_chat_line_message}/my_chat_line_message /'/'\''/my_chat_line_message /.*/${_chat_word}/my_chat_word /'/'\''/my_chat_word /.*/${if:${_key}==t?translated_text trans -brief -target '${my_lang}' -no-auto '${my_chat_line_message}':${if:${_key}==l?translated_lang trans -brief -no-auto -id '${my_chat_line_message}':translated_dict trans -dictionary -no-auto '${my_chat_word}'}}/my_cmd_suffix"
translate_hsignal.return_code = ok
utils_date_calc_days.arguments = "date_calc_days"
utils_date_calc_days.command = ""
utils_date_calc_days.conditions = "${tg_arguments} =~ ^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])$ && ${info:python_version} !="
utils_date_calc_days.enabled = on
utils_date_calc_days.hook = info
utils_date_calc_days.post_action = none
utils_date_calc_days.regex = "/.*/${info:python_eval,from datetime import datetime; date1 = datetime.today(); date2 = datetime.strptime('${tg_arguments}', '%Y-%m-%d'); delta = date1 - date2; print(abs(delta.days))}/tg_info"
utils_date_calc_days.return_code = ok
utils_date_preferred.arguments = "date_preferred"
utils_date_preferred.command = ""
utils_date_preferred.conditions = "${tg_arguments} =~ ^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])$ && ${info:python_version} !="
utils_date_preferred.enabled = on
utils_date_preferred.hook = info
utils_date_preferred.post_action = none
utils_date_preferred.regex = "/.*/${info:python_eval,from datetime import datetime; print(datetime.strptime('${tg_arguments}', '%Y-%m-%d').strftime('%x'))}/tg_info"
utils_date_preferred.return_code = ok
utils_holiday.arguments = "holiday"
utils_holiday.command = ""
utils_holiday.conditions = "${tg_arguments} =~ ^(0[1-9]|[1-2][0-9]|3[0-1])-(0[1-9]|1[0-2])$"
utils_holiday.enabled = on
utils_holiday.hook = info
utils_holiday.post_action = none
utils_holiday.regex = "/.*/${tg_arguments}/ /01-01/HAPPY NEW YEAR!/ /25-12/MERRY CHRISTMAS!/ /[0-9][0-9]-[0-9][0-9]//"
utils_holiday.return_code = ok
weechat_logo_random_colors.arguments = "500;0;0"
weechat_logo_random_colors.command = "/print -free -newbuffer logo -y 0 ${my_first};/print -free -newbuffer logo -y 1 ${my_second};/print -free -newbuffer logo -y 2 ${my_third};/print -free -newbuffer logo -y 3 ${my_forth};/print -free -newbuffer logo -y 4 ${my_fifth}"
weechat_logo_random_colors.conditions = ""
weechat_logo_random_colors.enabled = off
weechat_logo_random_colors.hook = timer
weechat_logo_random_colors.post_action = none
weechat_logo_random_colors.regex = "/.*/${plugins.var.logo_colors}/my_colors /^$/24,31,121,163,229,white/my_colors ===.*===___       __         ______________        _____===my_first ===.*===__ |     / /___________  ____/__  /_______ __  /_===my_second ===.*===__ | /| / /_  _ \  _ \  /    __  __ \  __ `/  __/===my_third ===.*===__ |/ |/ / /  __/  __/ /___  _  / / / /_/ // /_===my_forth ===.*===____/|__/  \___/\___/\____/  /_/ /_/\__,_/ \__/===my_fifth /[^ ]/${color:*${split:random,,collapse_seps+strip_left+strip_right,${my_colors}}}${re:0}${color:reset}/my_first /[^ ]/${color:*${split:random,,collapse_seps+strip_left+strip_right,${my_colors}}}${re:0}${color:reset}/my_second /[^ ]/${color:*${split:random,,collapse_seps+strip_left+strip_right,${my_colors}}}${re:0}${color:reset}/my_third /[^ ]/${color:*${split:random,,collapse_seps+strip_left+strip_right,${my_colors}}}${re:0}${color:reset}/my_forth /[^ ]/${color:*${split:random,,collapse_seps+strip_left+strip_right,${my_colors}}}${re:0}${color:reset}/my_fifth"
weechat_logo_random_colors.return_code = ok
